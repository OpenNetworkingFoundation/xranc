/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "XRAN-PDU"
 * 	found in "../xranc-sb-api/xRAN-API-PDUs.asn1"
 * 	`asn1c -fcompound-names -pdu=XRANCPDU`
 */

#ifndef	_CellConfigReport_H_
#define	_CellConfigReport_H_


#include <asn_application.h>

/* Including external dependencies */
#include "ECGI.h"
#include "PhysCellId.h"
#include "ARFCN-Value.h"
#include <NativeInteger.h>
#include "DuplexMode.h"
#include <BOOLEAN.h>
#include <BIT_STRING.h>
#include <asn_SEQUENCE_OF.h>
#include <constr_SEQUENCE_OF.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Forward declarations */
struct CandScell;

/* CellConfigReport */
typedef struct CellConfigReport {
	ECGI_t	 ecgi;
	PhysCellId_t	 pci;
	struct CellConfigReport__cand_scells {
		A_SEQUENCE_OF(struct CandScell) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} cand_scells;
	ARFCN_Value_t	 earfcn_dl;
	ARFCN_Value_t	 earfcn_ul;
	long	 rbs_per_tti_dl;
	long	 rbs_per_tti_ul;
	long	 num_tx_antenna;
	DuplexMode_t	 duplex_mode;
	long	*tdd_config	/* OPTIONAL */;
	long	*tdd_spl_sf_config	/* OPTIONAL */;
	long	 max_num_connected_ues;
	long	 max_num_connected_bearers;
	long	 max_num_ues_sched_per_tti_dl;
	long	 max_num_ues_sched_per_tti_ul;
	BOOLEAN_t	 dlfs_sched_enable;
	BIT_STRING_t	*featureSupportList	/* OPTIONAL */;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} CellConfigReport_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_CellConfigReport;
extern asn_SEQUENCE_specifics_t asn_SPC_CellConfigReport_specs_1;
extern asn_TYPE_member_t asn_MBR_CellConfigReport_1[17];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "CandScell.h"

#endif	/* _CellConfigReport_H_ */
#include <asn_internal.h>
